//////-------------------------------------------------------------------------------------------------
//// <auto-generated> 
//// Marked as auto-generated so StyleCop will ignore BDD style tests
//// </auto-generated>
////-------------------------------------------------------------------------------------------------

//using Rhino.Mocks;
//using RiftData.Presentation.Contracts.ViewModelFactories.Admin;
//using RiftData.Presentation.ViewModels.Admin.Home;
//using System.Web.Mvc;
//using Machine.Specifications;
//using Machine.Specifications.AutoMocking.Rhino;
//using Machine.Specifications.Mvc;
//using RiftData.Areas.Admin.Controllers;

//#pragma warning disable 169
//// ReSharper disable InconsistentNaming
//// ReSharper disable UnusedMember.Global
//// ReSharper disable UnusedMember.Local

//namespace RiftData.UnitTests.Presenation.Controllers.Admin
//{
//    public class HomeControllerSpecs
//    {
//        public class context_for_home_controller_specifications : Specification<HomeController>
//        {
//            protected static IHomePageViewModelFactory the_view_model_factory;

//            private Establish context = () =>
//                                            {
//                                                the_view_model_factory = DependencyOf<IHomePageViewModelFactory>();
//                                            };
//        }

//        [Subject(typeof(HomeController))]
//        public class when_the_home_controller_is_asked_for_the_index_action : context_for_home_controller_specifications
//        {
//            static ActionResult result;

//            static HomePageViewModel the_view_model;

//            Establish context = () => { the_view_model = new HomePageViewModel(); };

//            Because of = () => result = subject.Index();

//            It should_ask_the_home_page_view_model_factory_to_build_the_view_model = () => the_view_model_factory.AssertWasCalled(x => x.Build());

//            It should_return_the_default_view = () => result.ShouldBeAView().And().ViewName.ShouldEqual(string.Empty);

//            // It should_pass_the_view_model_to_the_view = () => result.ShouldBeAView().And().ViewData.Model.ShouldEqual(the_view_model);
//        }
//    }
//}