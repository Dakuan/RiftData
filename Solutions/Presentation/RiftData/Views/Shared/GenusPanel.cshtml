@using RiftData.Presentation.ViewModels
@model GenusPanelViewModel

<div id="GenusPanel">
    @this.Html.Telerik().PanelBar().Name("Genus_Panel").ExpandMode(PanelBarExpandMode.Single).Items(panelbar =>
        {
            foreach (var genus in this.Model.GenusList)
            {
                panelbar.Add().Text(genus.Name).Expanded(genus.Id == this.Model.ExpandedGenus ? true : false).HtmlAttributes(new { @class = "genusPanelbar" }).Items(panelBarChild =>
                    {
                        foreach (var species in genus.Species)
                        {
                            if (species.HasPhotos)
                            {
                                panelBarChild.Add().Text(species.Name).Selected(species.Id == this.Model.SelectedSpecies).LinkHtmlAttributes(new { id = "species_" + species.Id, title = species.Name }).ImageUrl(this.Url.Content("../Content/camera.png")).ImageHtmlAttributes(new { @class = "panelBarItemImage" }).Url(this.Url.Action("Index", "Species", new { speciesFullName = species.UrlName }, new {title = species.Name}));
                            }
                            else
                            {
                                panelBarChild.Add().Text(species.Name).Selected(species.Id == this.Model.SelectedSpecies).LinkHtmlAttributes(new { id = "species_" + species.Id, title = species.Name }).ImageUrl(this.Url.Content("../Content/camera.png")).ImageHtmlAttributes(new { @class = "panelBarItemImage", style = "display:none" }).Url(this.Url.Action("Index", "Species", new { speciesFullName = species.UrlName }, new {title = species.Name}));
                            }
                        }
                    });
            }
        })
</div>